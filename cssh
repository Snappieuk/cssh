#!/bin/bash

SCRIPT_NAME="cssh"
TARGET_PATH="/bin/$SCRIPT_NAME"

# NEW: resolve the absolute path to this script for scp
# (so scp doesn't try to copy a non-existent ./cssh)
if command -v readlink >/dev/null 2>&1; then
    SCRIPT_SRC="$(readlink -f "${BASH_SOURCE[0]}")"
else
    # Fallback if readlink -f isn't available
    case "${BASH_SOURCE[0]}" in
        /*) SCRIPT_SRC="${BASH_SOURCE[0]}" ;;
        *)  SCRIPT_SRC="$PWD/${BASH_SOURCE[0]}" ;;
    esac
fi

# Get the list of node IPs from pvecm status (Membership information)
nodes=$(pvecm status 2>/dev/null | awk '/^Membership information/{flag=1; next} flag && /^[[:space:]]*0x[0-9a-fA-F]+/ {print $3}' | sed 's/(local)//' | xargs)
local_node=$(hostname -I 2>/dev/null | awk '{print $1}')

# Handle --deploy flag
if [[ "$1" == "--deploy" ]]; then
    echo "Deploying $SCRIPT_NAME to all nodes..."

    for node in $nodes; do
        if [[ "$node" == "$local_node" || -z "$node" ]]; then
            continue
        fi

        echo "-- Deploying to $node ----------------------------------------"
        # Use resolved SCRIPT_SRC instead of $0
        scp "$SCRIPT_SRC" root@"$node":/tmp/$SCRIPT_NAME
        ssh root@"$node" "mv /tmp/$SCRIPT_NAME $TARGET_PATH && chmod +x $TARGET_PATH"
    done

    echo "Deployment complete."
    exit 0
fi

# Handle --parallel flag
if [[ "$1" == "--parallel" ]]; then
    shift
    if [ -z "$1" ]; then
        echo "Usage: $0 --parallel [command]"
        exit 1
    fi

    echo "Running command in parallel across nodes..."
    for node in $nodes; do
        if [[ -z "$node" ]]; then
            continue
        fi

        echo "-- $node ----------------------------------------"
        ssh -T root@"$node" -- "$@" &
    done

    wait
    echo "Parallel execution complete."
    exit 0
fi

# Default: sequential execution
if [ -z "$1" ]; then
    echo "Usage: $0 [--deploy] [--parallel] [command]"
    exit 1
fi

for node in $nodes; do
    if [[ -z "$node" ]]; then
        continue
    fi

    echo "-- $node ----------------------------------------"
    ssh -T root@"$node" -- "$@"
done
